FAILED EXPERIMENTS


/*
float cyl_helix(vec3 p, vec3 c, float r, float h, float hel) {
	vec3 q = p - c;

	vec3 cyl = vec3(length(q.xz), atan(q.y, q.x), q.y);

	// infinite cylinder, thick plane
	//min(helix + floor(r-q.y), floor(r-q.y))
	//
	//
	float helix = hel*mod(cyl.y-PI/2., PI*2.);
	vec2 d = vec2(abs(cyl.x)/r - helix - floor(r-q.y), q.y - h + floor(r-q.y) + helix);
	return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));
}


vec3 cyl_helix(vec3 p, vec3 c, float radius, float h, float hel) {
	vec3 q = p - c;

	vec3 cyl = vec3(length(q.xz), (sign(q.z)*atan(q.z, q.x)+PI), q.y);

	float helix = cyl.y / (PI*2.);
	float side = abs(cyl.r) - radius - floor(q.y);
	float top = q.y - h - fract(-cyl.r + radius);

	vec2 d = vec2(min(side, side-1.), top);

	return vec3(min(max(d.x, d.y), 0.0) + length(max(d, 0.0)), side, top);
}


float sdCylinder( vec3 p, vec3 c )
{
  return max(length(p.xz-c.xy)-c.z+floor(p.y-5.0), -c.z);
}

float sdCappedCylinder( vec3 p, vec2 h )
{
  vec2 d = abs(vec2(length(p.xz),p.y)) - h;
  return min(max(d.x,d.y),0.0) + length(max(d,0.0));
}

float cyl_helix( vec3 p, vec3 c, vec2 h )
{
	vec3 q = p - c;
	h.y -= floor(length(q.xz));
	vec2 d1 = abs(vec2(length(q.xz),q.y)) - h;
	vec2 d2 = abs(vec2(length(q.xz),q.y)) - h - vec2(fract(length(q.xz)), floor(length(q.xz)));
	vec2 d = max(d1, d2);
	return min(max(d.x,d.y),0.0) + length(max(d,0.0));
}

float sdTorus( vec3 p, vec2 t )
{
  vec2 q = vec2(length(p.xz)-t.x,p.y);
  return length(q)-t.y;
}

float lengthn(vec2 p, float n) {
	return pow(pow(abs(p.x), n) + pow(abs(p.y), n), 1./n);
}

float sdTorus82( vec3 p, vec2 t )
{
  vec2 q = vec2(length(p.xz)-t.x,p.y);
  return lengthn(q, 8.)-t.y;
}

float subbed_cyl(vec3 p, vec3 c) {
	float cyl = sdCappedCylinder(p-c, vec2(4.0, 4.0));

	p.y = mod(p.y+800.0, 8.0*korg[0]) + 4.0*korg[0];
	float torus = sdTorus82(p-c, vec2(4.0, 0.5));

	return torus;
	//return max(-torus, cyl);
}

*/